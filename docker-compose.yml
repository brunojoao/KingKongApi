version: '3.9'

services:
  kong-database:
    image: postgres:12.19-alpine
    container_name: KingKongDatabase
    ports:
      - "5432:5432"  # Expor a porta do PostgreSQL
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-database-data:/var/lib/postgresql/data

  kong-migration:
    image: kong:3.7.1
    command: kong migrations bootstrap
    container_name: KingKongMigration
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
    depends_on:
      - kong-database

  kong:
    image: kong:3.7.1
    container_name: KingKong
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8002:8002"
      - "8444:8444"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"  # Desativa HTTPS
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"  # Desativa HTTPS
    depends_on:
      - kong-database
      - kong-migration

  api-1:
    image: node:alpine3.19
    container_name: api1
    working_dir: /app
    volumes:
      - ./apis/api-1:/app
    command: sleep infinity
    ports:
      - "3333:3333"
    depends_on:
      - kong
    environment:
      NODE_ENV: development

volumes:
  kong-database-data:
